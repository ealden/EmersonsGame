plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.escanan.ealden'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    jcenter()
}

dependencies {
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.cucumber:cucumber-java:6.6.0'
    testImplementation 'io.cucumber:cucumber-junit:6.6.0'
    testImplementation 'io.cucumber:cucumber-spring:6.6.0'
    testImplementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
    cucumberRuntime 'com.h2database:h2'
}

test {
    useJUnitPlatform()
}

task cucumber() {
    dependsOn assemble, compileTestJava

    doLast {
        javaexec {
            main = 'io.cucumber.core.cli.Main'
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--strict', '--tags', 'not @wip', '--plugin', 'pretty', '--glue', 'com.escanan.ealden.race', 'src/test/resources']
        }
    }
}

task wip() {
    dependsOn assemble, compileTestJava

    doLast {
        javaexec {
            main = 'io.cucumber.core.cli.Main'
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--tags', '@wip', '--plugin', 'pretty', '--glue', 'com.escanan.ealden.race', 'src/test/resources']
        }
    }
}
